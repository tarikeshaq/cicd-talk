# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called check
  check:
    name: Check
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
    env:
      working-directory: ./backend/

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo check
        run: cargo check
        working-directory: ${{env.working-directory}}
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    env:
     working-directory: ./backend/
     DATABASE_TEST_URL: postgres://admin:admin@localhost/bucs-test
    services:
      database:
        image: postgres:latest
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: bucs-test
          DATABASE_URL: ${{env.DATABASE_TEST_URL}}
        volumes:
          - data:/var/lib/postgresql/data/
        ports:
          - 5432:5432
    steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Intall postgres driver
        run: |
          sudo apt-get install libpq-dev
      - name: Install diesel
        run: |
          cargo install diesel_cli --no-default-features --features postgres
      - name: Run migrations
        run: |
          diesel --database-url postgres://admin:admin@localhost/bucs-test setup
        working-directory: ${{env.working-directory}}
      - name: Run Cargo test
        run: |
          cargo test --release --all-features
        working-directory: ${{env.working-directory}}
        
      
      
        
      
    
        
